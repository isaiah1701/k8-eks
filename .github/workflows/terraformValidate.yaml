name: validation and backend of terraform 
on: 
  push:
    branches: [main, addCICD] 

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Terraform Plan
<<<<<<< HEAD
        run: terraform plan -input=false -no-color  # Add these flags
=======
        run: terraform plan -input=false -var-file="terraform.tfvars"  # Add these flags
>>>>>>> addCICD

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform configuration
<<<<<<< HEAD
        run: terraform apply -auto-approve -input=false  # Add -input=false
=======
        run: terraform apply -auto-approve -input=false -var-file="terraform.tfvars"  # Add flags
>>>>>>> addCICD
